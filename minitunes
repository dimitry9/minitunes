#include <iostream>
#include "Song.h"
#include "Collection.h"
#include "Playlist.h"
#include "Utils.h"
#include "Player.h"

using namespace std;

int main(int argc, char *argv[])
{
	Collection collection;
	Playlist playlist(&collection);
	Utils utils;
	utils.manageArguments(argc, argv, collection, playlist);
	char opcion = 'n';
	do
	{
		cout << "--------------------------------" << endl;
		cout << "----------- MiniTunes ----------" << endl;
		cout << "--------------------------------" << endl;
		cout << "1- Add song" << endl;
		cout << "2- Edit song" << endl;
		cout << "3- Delete song" << endl;
		cout << "4- Show collection" << endl;
		cout << "5- Manage playlist" << endl;
		cout << "6- Import iTunes JSON data" << endl;
		cout << "7- Export playlist to XSPF" << endl;
		cout << "8- Save data" << endl;
		cout << "9- Load data" << endl;
		cout << "0- Play playlist" << endl;
		cout << "q- Quit" << endl;
		cout << "Option: ";
		cin >> opcion;

		cin.get();
		switch (opcion)
		{
		case '1': collection.addSong();
			break;
		case '2': collection.editSong();
			break;
		case '3': collection.deleteSong();
			break;
		case '4': collection.show();
			break;
		case '5': playlist.manage();
			break;
		case '6':
		{
					string archivo;
					cout << "Filename: ";
					cin.get();
					getline(cin, archivo);
					collection.importJSON(archivo);
		}
			break;
		case '7': playlist.saveXSPF();
			break;
		case '8': utils.saveData(collection, playlist);
			break;
		case '9': utils.loadData(collection, playlist);
			break;
		case '0': playlist.play();
			break;
		case 'q':
			break;
		default: cout << "Error: Unknown option" << endl;
		}
	} while (opcion != 'q');
	return 0;
}
